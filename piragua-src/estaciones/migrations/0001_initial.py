# Generated by Django 3.1.5 on 2022-03-07 00:33

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actividades',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('cupo', models.IntegerField()),
                ('descripcion', models.CharField(blank=True, max_length=99999, null=True)),
                ('enlace', models.CharField(blank=True, max_length=255, null=True)),
                ('enlace_multimedia', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_cierre', models.DateField(blank=True, null=True)),
                ('fecha_inicio', models.DateField(blank=True, null=True)),
                ('fecha_publicacion', models.DateField(blank=True, null=True)),
                ('hora_cierre', models.CharField(blank=True, max_length=255, null=True)),
                ('hora_inicio', models.CharField(blank=True, max_length=255, null=True)),
                ('invita', models.CharField(blank=True, max_length=255, null=True)),
                ('lugar', models.CharField(blank=True, max_length=255, null=True)),
                ('publico', models.CharField(blank=True, max_length=255, null=True)),
                ('resumen', models.CharField(blank=True, max_length=1000, null=True)),
                ('tipo', models.CharField(blank=True, max_length=255, null=True)),
                ('titulo', models.CharField(blank=True, max_length=255, null=True)),
                ('enlace_multimendia', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'actividades',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Acueductos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('identificacion', models.CharField(max_length=150)),
                ('nombre_responsable', models.CharField(max_length=150)),
                ('telefono_responsable', models.CharField(max_length=150)),
                ('celular_responsable', models.CharField(max_length=150)),
                ('email_responsable', models.CharField(max_length=150)),
                ('direccion_principal', models.CharField(max_length=150)),
                ('nombre_predio', models.CharField(max_length=150)),
                ('fuente_informacion', models.CharField(max_length=150)),
                ('fontanero_acompanante', models.CharField(max_length=150)),
                ('telefono_fontanero', models.CharField(max_length=150)),
                ('celular_fontanero', models.CharField(max_length=150)),
                ('eliminado', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'acueductos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boletines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('boletin', models.CharField(max_length=100)),
                ('min', models.DecimalField(decimal_places=3, max_digits=7)),
                ('mean', models.DecimalField(decimal_places=3, max_digits=7)),
                ('acum', models.DecimalField(decimal_places=3, max_digits=7)),
                ('max', models.DecimalField(decimal_places=3, max_digits=7)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'boletines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalidadesAire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('tipo_dato', models.SmallIntegerField()),
                ('calidad', models.SmallIntegerField()),
                ('muestra', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'calidades_aire',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CampannasFisicoquimicas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anno', models.SmallIntegerField()),
                ('campanna', models.CharField(max_length=5)),
                ('campaign', models.CharField(max_length=15)),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('monitoreo_realizado', models.CharField(max_length=10)),
                ('metodo_medicion_caudal', models.CharField(max_length=20)),
                ('observaciones', models.CharField(max_length=500)),
                ('ica', models.FloatField(blank=True, null=True)),
                ('calidad_ica', models.CharField(max_length=150)),
                ('aprobado', models.BooleanField()),
                ('fecha_entrega', models.DateTimeField(blank=True, null=True)),
                ('fecha_edicion', models.DateTimeField(blank=True, null=True)),
                ('fecha_revision', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'campannas_fisicoquimicas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ComponentesMonitoreo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'componentes_monitoreo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConvencionesColores',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('valor_inicial', models.FloatField(blank=True, null=True)),
                ('valor_final', models.FloatField(blank=True, null=True)),
                ('clasificacion', models.CharField(blank=True, max_length=255, null=True)),
                ('observacion', models.CharField(blank=True, max_length=255, null=True)),
                ('orden', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'convenciones_colores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Corregimientos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=150, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('area', models.FloatField()),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'corregimientos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CsvRedAutomaticaDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(max_length=100)),
                ('nivel_update', models.CharField(max_length=100)),
                ('precipitacion', models.CharField(max_length=100)),
                ('precipitacion_update', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'csv_red_automatica_diario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurvasCalibracion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ecuacion', models.SmallIntegerField()),
                ('k', models.DecimalField(decimal_places=6, max_digits=12)),
                ('b', models.DecimalField(decimal_places=6, max_digits=12)),
                ('a', models.DecimalField(blank=True, decimal_places=6, max_digits=12, null=True)),
                ('i', models.DecimalField(blank=True, decimal_places=6, max_digits=12, null=True)),
                ('offset', models.DecimalField(decimal_places=4, max_digits=8)),
            ],
            options={
                'db_table': 'curvas_calibracion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DescripcionAcueductos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('riesgo_acceso', models.BooleanField()),
                ('riesgo_acceso_descripcion', models.TextField()),
                ('abastece', models.TextField()),
                ('descripcion_entorno', models.TextField()),
                ('actividades_cuidado', models.TextField()),
                ('agricultura', models.BooleanField()),
                ('agricultura_descripcion', models.TextField()),
                ('recreacion', models.BooleanField()),
                ('recreacion_descripcion', models.TextField()),
                ('reforestacion', models.BooleanField()),
                ('reforestacion_descripcion', models.TextField()),
                ('pecuario', models.BooleanField()),
                ('pecuario_descripcion', models.TextField()),
                ('riego', models.BooleanField()),
                ('riego_descripcion', models.TextField()),
                ('vertimiento', models.BooleanField()),
                ('vertimiento_descripcion', models.TextField()),
                ('mineria', models.BooleanField()),
                ('mineria_descripcion', models.TextField()),
                ('sin_intervencion', models.BooleanField()),
                ('sin_intervencion_descripcion', models.TextField()),
                ('area_protegida', models.BooleanField()),
                ('area_protegida_descripcion', models.TextField()),
                ('zona_conservacion', models.BooleanField()),
                ('zona_conservacion_descripcion', models.TextField()),
                ('otro', models.BooleanField()),
                ('otro_descripcion', models.TextField()),
            ],
            options={
                'db_table': 'descripcion_acueductos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Documentacion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(blank=True, max_length=255, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=511, null=True)),
                ('tipo', models.CharField(blank=True, max_length=255, null=True)),
                ('enlace', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'documentacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErrorCsvRedAutomaticaDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(max_length=100)),
                ('precipitacion', models.CharField(max_length=100)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'error_csv_red_automatica_diario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estaciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('tipo', models.SmallIntegerField()),
                ('fuente', models.CharField(max_length=100)),
                ('altitud', models.SmallIntegerField(blank=True, null=True)),
                ('latitud', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitud', models.DecimalField(decimal_places=7, max_digits=10)),
                ('ubicacion', models.CharField(max_length=100)),
                ('database', models.CharField(max_length=20)),
                ('table', models.CharField(max_length=20)),
                ('codigo_ideam', models.IntegerField(blank=True, null=True)),
                ('categoria_ideam', models.CharField(max_length=20)),
                ('emails', models.TextField()),
                ('habilitado', models.BooleanField()),
            ],
            options={
                'db_table': 'estaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstacionesAire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('tipo', models.SmallIntegerField()),
                ('altitud', models.SmallIntegerField(blank=True, null=True)),
                ('latitud', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitud', models.DecimalField(decimal_places=7, max_digits=10)),
                ('ubicacion', models.CharField(max_length=100)),
                ('habilitado', models.BooleanField()),
                ('codigo_corantioquia', models.SmallIntegerField()),
                ('tipo_trama', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'estaciones_aire',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstadoRedNiveles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('porc_datos_diario', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_datos_semanal', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_datos_quincenal', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_codigo_9990', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_codigo_8880', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_mayor_rango', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_menor_rango', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'estado_red_niveles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstadoRedPrecipitaciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('porc_datos_diario', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_datos_semanal', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_datos_quincenal', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_lluvia_diario', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_lluvia_semanal', models.DecimalField(decimal_places=2, max_digits=5)),
                ('porc_lluvia_quincenal', models.DecimalField(decimal_places=2, max_digits=5)),
                ('conteo_254_diario', models.SmallIntegerField()),
                ('conteo_254_semanal', models.SmallIntegerField()),
                ('conteo_254_quincenal', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'estado_red_precipitaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('enlace', models.CharField(blank=True, max_length=99999, null=True)),
                ('pregunta', models.CharField(blank=True, max_length=99999, null=True)),
                ('respuesta', models.CharField(blank=True, max_length=99999, null=True)),
            ],
            options={
                'db_table': 'faq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fisicoquimicos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('muestra', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('muestra_izquierda', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('muestra_centro', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('muestra_derecha', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('tipo_muestra', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'fisicoquimicos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormulariosFormulariocienaga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'formularios_formulariocienaga',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormulariosFormulariofisicoquimico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'formularios_formulariofisicoquimico',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormulariosFormulariolaboratorio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'formularios_formulariolaboratorio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormulariosFormulariolimni',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'formularios_formulariolimni',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormulariosFormulariossinaprobar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'formularios_formulariossinaprobar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FuentesHidricas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('importancia_zonal', models.CharField(max_length=50)),
                ('tipo_cuerpo', models.CharField(max_length=3)),
                ('tipo_sistema', models.CharField(max_length=10)),
                ('codigo_sirh', models.CharField(max_length=150)),
                ('sistema_acuifero', models.CharField(max_length=150)),
                ('provincia_geologica', models.CharField(max_length=150)),
                ('localizacion', models.TextField()),
                ('presion', models.FloatField(blank=True, null=True)),
                ('altitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('fisicoquimico_realizado', models.BooleanField()),
                ('hidrobiologico_realizado', models.BooleanField()),
                ('fuente_subterranea', models.BooleanField()),
                ('eliminado', models.BooleanField()),
                ('bmwp', models.SmallIntegerField(blank=True, null=True)),
                ('calidad_bmwp', models.CharField(max_length=50)),
                ('icono_hb', models.SmallIntegerField(blank=True, null=True)),
                ('ica', models.FloatField(blank=True, null=True)),
                ('calidad_ica', models.CharField(max_length=150)),
                ('icono_fq', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fuentes_hidricas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HojasDeVidaInsumos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'hojas_de_vida_insumos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HojasDeVidaSistemaDeControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'hojas_de_vida_sistema_de_control',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HojasDeVidaSistemaDeMedicion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'hojas_de_vida_sistema_de_medicion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HojasDeVidaSistemaEnergetico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'hojas_de_vida_sistema_energetico',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('i_bajo', models.SmallIntegerField()),
                ('i_alto', models.SmallIntegerField()),
                ('pc_bajo', models.SmallIntegerField()),
                ('pc_alto', models.SmallIntegerField()),
                ('color', models.CharField(max_length=50)),
                ('color_hex', models.CharField(max_length=10)),
                ('categoria', models.CharField(max_length=150)),
                ('icono', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'ica',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndiceCalidadAgua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ica', models.FloatField(blank=True, null=True)),
                ('calidad_ica', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'indice_calidad_agua',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InformacionAcueductos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concesion_agua', models.BooleanField()),
                ('expediente_concesion', models.CharField(max_length=150)),
                ('resolucion_corantioquia', models.CharField(max_length=150)),
                ('fecha_inicial_concesion', models.DateField(blank=True, null=True)),
                ('fecha_final_concesion', models.DateField(blank=True, null=True)),
                ('caudal_concesion', models.FloatField(blank=True, null=True)),
                ('cantidad_usuarios', models.IntegerField(blank=True, null=True)),
                ('potabilizacion', models.BooleanField()),
                ('estructura_captacion', models.BooleanField()),
                ('estado_estructura_captacion', models.CharField(max_length=10)),
                ('disennos_estructura', models.BooleanField()),
                ('observacion_captacion', models.CharField(max_length=30)),
                ('estructura_control', models.BooleanField()),
                ('estado_estructura_control', models.CharField(max_length=10)),
                ('estado_pueaa', models.CharField(max_length=30)),
                ('mide_lluvia', models.BooleanField()),
                ('entrega_reporte_lluvia', models.BooleanField()),
            ],
            options={
                'db_table': 'informacion_acueductos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InformacionesFisicoquimicas',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('valor', models.FloatField(blank=True, null=True)),
                ('fecha_desde', models.DateField(blank=True, null=True)),
                ('fecha_hasta', models.DateField(blank=True, null=True)),
                ('cantidad_fuentes', models.IntegerField(blank=True, null=True)),
                ('nota_estadistica', models.CharField(blank=True, max_length=255, null=True)),
                ('observacion', models.CharField(blank=True, max_length=255, null=True)),
                ('caudal_general', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'informaciones_fisicoquimicas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InventarioInsumos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('stock', models.SmallIntegerField()),
                ('instalados', models.SmallIntegerField()),
                ('tipo', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'inventario_insumos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JhiAuthority',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'jhi_authority',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JhiPersistentAuditEvent',
            fields=[
                ('event_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('principal', models.CharField(max_length=50)),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('event_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'jhi_persistent_audit_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JhiUser',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=50, unique=True)),
                ('password_hash', models.CharField(max_length=60)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=191, null=True, unique=True)),
                ('image_url', models.CharField(blank=True, max_length=256, null=True)),
                ('activated', models.BooleanField()),
                ('lang_key', models.CharField(blank=True, max_length=10, null=True)),
                ('activation_key', models.CharField(blank=True, max_length=20, null=True)),
                ('reset_key', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('reset_date', models.DateTimeField(blank=True, null=True)),
                ('last_modified_by', models.CharField(blank=True, max_length=50, null=True)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'jhi_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogsFtpAire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_archivo', models.CharField(max_length=50)),
                ('total_registros', models.SmallIntegerField()),
                ('estado', models.SmallIntegerField()),
                ('observacion', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'logs_ftp_aire',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mantenimientos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('estado', models.SmallIntegerField()),
                ('problema', models.TextField()),
                ('solucion', models.TextField()),
                ('cambio_componentes', models.BooleanField()),
                ('componente_cambiado', models.TextField()),
                ('estado_componente', models.SmallIntegerField()),
                ('lugar_almacenamiento', models.CharField(max_length=100)),
                ('pendiente', models.BooleanField()),
                ('observacion', models.TextField()),
                ('responsable', models.CharField(max_length=100)),
                ('enlace', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'mantenimientos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapasCalor',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('titulo', models.CharField(blank=True, max_length=255, null=True)),
                ('activo', models.CharField(blank=True, max_length=255, null=True)),
                ('observaciones', models.CharField(blank=True, max_length=255, null=True)),
                ('tipo', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'mapas_calor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapasCalorAires',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('activo', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_desde', models.DateField(blank=True, null=True)),
                ('fecha_hasta', models.DateField(blank=True, null=True)),
                ('nota_estadistica', models.CharField(blank=True, max_length=255, null=True)),
                ('concentracion', models.CharField(blank=True, max_length=255, null=True)),
                ('mayor_concentracion', models.CharField(blank=True, max_length=255, null=True)),
                ('variacion_semanal', models.CharField(blank=True, max_length=255, null=True)),
                ('recuerda', models.CharField(blank=True, max_length=255, null=True)),
                ('observacion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'mapas_calor_aires',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapasCalorCaudales',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('activo', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_desde', models.DateField(blank=True, null=True)),
                ('fecha_hasta', models.DateField(blank=True, null=True)),
                ('nota_estadistica', models.CharField(blank=True, max_length=255, null=True)),
                ('promedio_general', models.FloatField(blank=True, null=True)),
                ('variacion', models.FloatField(blank=True, null=True)),
                ('porcentaje_variacion', models.FloatField(blank=True, null=True)),
                ('tipo_variacion', models.CharField(blank=True, max_length=255, null=True)),
                ('valor_minimo', models.FloatField(blank=True, null=True)),
                ('interpretacion', models.CharField(blank=True, max_length=255, null=True)),
                ('caudal_minimo', models.FloatField(blank=True, null=True)),
                ('caudal_promedio', models.FloatField(blank=True, null=True)),
                ('caudal_maximo', models.FloatField(blank=True, null=True)),
                ('profundidad_rios', models.CharField(blank=True, max_length=255, null=True)),
                ('caudal_promedio_historico', models.FloatField(blank=True, null=True)),
                ('observacion', models.CharField(blank=True, max_length=255, null=True)),
                ('valor_maximo', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mapas_calor_caudales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapasCalorLluvias',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('activo', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_desde', models.DateField(blank=True, null=True)),
                ('fecha_hasta', models.DateField(blank=True, null=True)),
                ('nota_estadistica', models.CharField(blank=True, max_length=255, null=True)),
                ('promedio_general', models.FloatField(blank=True, null=True)),
                ('variacion', models.FloatField(blank=True, null=True)),
                ('tipo_variacion', models.CharField(blank=True, max_length=255, null=True)),
                ('porcentaje_variacion', models.FloatField(blank=True, null=True)),
                ('interpretacion', models.CharField(blank=True, max_length=255, null=True)),
                ('observacion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'mapas_calor_lluvias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Meteorologias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frecuencia', models.SmallIntegerField()),
                ('tipo_dato', models.SmallIntegerField()),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('radiacion', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('calidad_radiacion', models.SmallIntegerField()),
                ('temperatura', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('calidad_temperatura', models.SmallIntegerField()),
                ('humedad_relativa', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('calidad_humedad_relativa', models.SmallIntegerField()),
                ('direccion_viento', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('calidad_direccion_viento', models.SmallIntegerField()),
                ('velocidad_viento', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('calidad_velocidad_viento', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'meteorologias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Multimedia',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('enlace', models.CharField(blank=True, max_length=255, null=True)),
                ('tipo', models.CharField(blank=True, max_length=255, null=True)),
                ('titulo', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'multimedia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Municipios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_antioquia', models.CharField(max_length=150)),
                ('codigo_piragua', models.CharField(max_length=3, unique=True)),
                ('codigo_dane', models.CharField(max_length=5, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('perimetro', models.FloatField()),
                ('area', models.FloatField()),
                ('color', models.CharField(max_length=10)),
                ('uuid', models.UUIDField()),
                ('centroide', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'municipios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Niveles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frecuencia', models.SmallIntegerField()),
                ('tipo_dato', models.SmallIntegerField()),
                ('fecha', models.DateTimeField()),
                ('muestra', models.DecimalField(decimal_places=3, max_digits=7)),
                ('caudal', models.DecimalField(decimal_places=3, max_digits=7)),
                ('nivel', models.DecimalField(decimal_places=3, max_digits=7)),
                ('calidad', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'niveles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NivelesSubsiguientes1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('area', models.FloatField()),
                ('color', models.CharField(max_length=10)),
                ('uuid', models.UUIDField()),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('centroide', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'niveles_subsiguientes_1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NivelesSubsiguientes2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('codigo_pomca', models.CharField(max_length=15)),
                ('nombre_pomcas', models.CharField(max_length=150)),
                ('area_hidrografica', models.IntegerField()),
                ('nombre_area_hidrografica', models.CharField(max_length=150)),
                ('zona_hidrografica', models.IntegerField()),
                ('nombre_zona_hidrografica', models.CharField(max_length=150)),
                ('subzona_hidrografica', models.IntegerField()),
                ('nombre_subzona_hidrografica', models.CharField(max_length=150)),
                ('cuenca', models.CharField(max_length=150)),
                ('uuid', models.UUIDField()),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('centroide', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'niveles_subsiguientes_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Noticias',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('autor', models.CharField(blank=True, max_length=255, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=99999, null=True)),
                ('enlace', models.CharField(blank=True, max_length=255, null=True)),
                ('enlace_multimedia', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_cierre', models.DateField(blank=True, null=True)),
                ('fecha_noticia', models.DateField(blank=True, null=True)),
                ('publico', models.CharField(blank=True, max_length=255, null=True)),
                ('resumen', models.CharField(blank=True, max_length=1000, null=True)),
                ('titulo', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'noticias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParametrosEstacionAire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frecuencia', models.SmallIntegerField()),
                ('concentracion', models.DecimalField(decimal_places=7, max_digits=10)),
                ('ica', models.DecimalField(decimal_places=7, max_digits=10)),
                ('icono', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'parametros_estacion_aire',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParametrosFisicoquimicos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50)),
                ('nombre', models.CharField(max_length=150)),
                ('unidad', models.CharField(max_length=50)),
                ('tipo', models.CharField(max_length=50)),
                ('limite_norma', models.CharField(max_length=150)),
                ('descripcion', models.TextField()),
                ('metodo_medicion', models.CharField(max_length=150)),
                ('minimo', models.SmallIntegerField(blank=True, null=True)),
                ('maximo', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'parametros_fisicoquimicos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParametrosInstrumentacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('unidad', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('limite_norma', models.CharField(blank=True, max_length=150, null=True)),
                ('tipo_parametro', models.SmallIntegerField()),
                ('horas_ica', models.SmallIntegerField(blank=True, null=True)),
                ('maximo', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('minimo', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
            ],
            options={
                'db_table': 'parametros_instrumentacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParametrosMeteorologicos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radiacion', models.BooleanField()),
                ('temperatura', models.BooleanField()),
                ('humedad_relativa', models.BooleanField()),
                ('direccion_viento', models.BooleanField()),
                ('velocidad_viento', models.BooleanField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'parametros_meteorologicos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Precipitaciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frecuencia', models.SmallIntegerField()),
                ('tipo_dato', models.SmallIntegerField()),
                ('fecha', models.DateTimeField()),
                ('muestra', models.DecimalField(decimal_places=3, max_digits=7)),
                ('calidad', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'precipitaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Preinscripciones',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('last_modifier_id', models.CharField(blank=True, max_length=255, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('contactos_id', models.BigIntegerField(blank=True, null=True)),
                ('contacto_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'preinscripciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProyectosMonitoreo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'proyectos_monitoreo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recorridos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=500)),
                ('referencia1', models.CharField(max_length=150)),
                ('referencia2', models.CharField(max_length=150)),
                ('referencia3', models.CharField(max_length=150)),
                ('vehicular', models.BooleanField()),
                ('tiempo_vehicular', models.CharField(max_length=5)),
                ('mular', models.BooleanField()),
                ('tiempo_mular', models.CharField(max_length=5)),
                ('fluvial', models.BooleanField()),
                ('tiempo_fluvial', models.CharField(max_length=5)),
                ('senderismo', models.BooleanField()),
                ('tiempo_senderismo', models.CharField(max_length=5)),
                ('otro', models.BooleanField()),
                ('tiempo_otro', models.CharField(max_length=5)),
                ('via', models.CharField(max_length=150)),
                ('otro_descripcion', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'recorridos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Secciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.TextField()),
                ('y', models.TextField()),
            ],
            options={
                'db_table': 'secciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Territoriales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, unique=True)),
                ('subregion', models.CharField(max_length=30)),
                ('area', models.FloatField()),
                ('color', models.CharField(max_length=10)),
                ('uuid', models.UUIDField()),
                ('centroide', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'territoriales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Veredas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=150, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('area', models.FloatField()),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'veredas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActividadesMunicipios',
            fields=[
                ('actividades', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.actividades')),
            ],
            options={
                'db_table': 'actividades_municipios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActividadesTerritoriales',
            fields=[
                ('actividades', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.actividades')),
            ],
            options={
                'db_table': 'actividades_territoriales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlertasUmbralesNivel',
            fields=[
                ('estacion', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.estaciones')),
                ('umbral', models.SmallIntegerField()),
                ('email_amarillo', models.BooleanField()),
                ('email_naranja', models.BooleanField()),
                ('email_rojo', models.BooleanField()),
                ('amarillo_at', models.DateTimeField()),
                ('naranja_at', models.DateTimeField()),
                ('rojo_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'alertas_umbrales_nivel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlertasUmbralesPrecipitacion',
            fields=[
                ('estacion', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.estaciones')),
                ('umbral', models.SmallIntegerField()),
                ('email_amarillo', models.BooleanField()),
                ('email_naranja', models.BooleanField()),
                ('email_rojo', models.BooleanField()),
                ('amarillo_at', models.DateTimeField()),
                ('naranja_at', models.DateTimeField()),
                ('rojo_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'alertas_umbrales_precipitacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HojasDeVida',
            fields=[
                ('estacion', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.estaciones')),
                ('version', models.SmallIntegerField()),
                ('responsable', models.CharField(max_length=100)),
                ('entidad', models.CharField(max_length=200)),
                ('email_responsable', models.CharField(max_length=254)),
                ('telefono_responsable', models.CharField(max_length=150)),
                ('observacion', models.TextField()),
                ('foto', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'hojas_de_vida',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JhiPersistentAuditEvtData',
            fields=[
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.jhipersistentauditevent')),
                ('name', models.CharField(max_length=150)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'jhi_persistent_audit_evt_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JhiUserAuthority',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.jhiuser')),
            ],
            options={
                'db_table': 'jhi_user_authority',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoticiasMunicipios',
            fields=[
                ('noticias', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.noticias')),
            ],
            options={
                'db_table': 'noticias_municipios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoticiasTerritoriales',
            fields=[
                ('noticias', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.noticias')),
            ],
            options={
                'db_table': 'noticias_territoriales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UmbralesNivel',
            fields=[
                ('estacion', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.estaciones')),
                ('duracion_amarillo', models.SmallIntegerField()),
                ('duracion_naranja', models.SmallIntegerField()),
                ('duracion_rojo', models.SmallIntegerField()),
                ('umbral_amarillo', models.SmallIntegerField()),
                ('umbral_naranja', models.SmallIntegerField()),
                ('umbral_rojo', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'umbrales_nivel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UmbralesPrecipitacion',
            fields=[
                ('estacion', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='estaciones.estaciones')),
                ('duracion_amarillo', models.SmallIntegerField()),
                ('duracion_naranja', models.SmallIntegerField()),
                ('duracion_rojo', models.SmallIntegerField()),
                ('umbral_amarillo', models.SmallIntegerField()),
                ('umbral_naranja', models.SmallIntegerField()),
                ('umbral_rojo', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'umbrales_precipitacion',
                'managed': False,
            },
        ),
    ]
